swagger: '2.0'
host: 'hackernew.herokuapp.com'

# METADATA ---------------------------------------------------------------------
info:
  version: "1.0.0"
  title: Hacker News

# SEGURITY DEFITIONS -----------------------------------------------------------
securityDefinitions:
  apiKey:
    type: apiKey
    description: És la clau d'usuari generada per l'aplicació de Google.
    name: api_key
    in: header

# PRODUCES ---------------------------------------------------------------------
produces:
  - application/json

# PATHS LIST -------------------------------------------------------------------
paths:

# USER OPERATIONS --------------------------------------------------------------

  # GET user list
  /users.json:
    get:
      description: Retorna un llistat de tots els usuaris.
      responses:
        200:
          description: S'ha retornat tots els usuaris.
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'

  # GET specific user info
  /users/{id}.json:
    get:
      description: Retorna la informació d'un usuari.
      parameters:
        - name: id
          in: path
          description: Identificador del usuari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha retornat l'usuari especificat.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
    put:
      security:
        - apiKey: []
      description: Editar
      parameters:
        - name: id
          in: path
          description: Identificador del usuari.
          required: true
          type: integer
          format: int64
        - name: user
          in: body
          description: L'usuari a modificar
          required: true
          schema:
            $ref: '#/definitions/UserUpdate'
      responses:
        200:
          description: S'ha actualitzat correctament.
          schema:
            $ref: '#/definitions/User'
        401:
          description: No autoritzat.
          schema:
            $ref: '#/definitions/User'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'

# SUBMISSIONS OPERATIONS -------------------------------------------------------

   # GET url submissions list and POST new submission
  /submissions.json:
    get:
      description: Retorna un llistat de publicacions de tipus 'URL', es a dir, amb el camp url no buit ordenat cronologicament.
      responses:
        200:
          description: S'ha retornat totes les submissions de tipus 'URL'.
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
   
    post:
      security:
        - apiKey: []
      description: Crea una nova publicació.
      consumes:
        - application/json
      parameters:
        - name: submission
          in: body
          description: La publicació a modificar
          required: true
          schema:
            $ref: '#/definitions/SubmissionCreate'
      responses:
        201:
          description: S'ha creat el comentari especificat.
          schema:
            $ref: '#/definitions/Comment'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
          
  # GET ask submissions list
  /ask.json:
    get:
      description: Retorna un llistat de publicacions de tipus 'Ask', es a dir, amb el camp url buit ordenat cronologicament.
      responses:
        200:
          description: S'ha retornat totes les submissions de tipus 'Ask'.
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'

  # GET specific submission info
  /submissions/{id}.json:
    get:
      description: Retorna la informació d'un publicació.
      parameters:
        - name: id
          in: path
          description: Identificador de la publicació.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha retornat la publicació especificada.
          schema:
            $ref: '#/definitions/Submission'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # POST vote some submission          
  /submissions/{id}/vote.json:
    post:
      security:
        - apiKey: []
      description: Vota la publicació amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador de la publicació.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha votat la publicació especificada amb l'usuari autenticat.
        404:
          description: La publicació no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # GET comments by specific user     
  /submissions/{id}/comments.json:
    get:
      description: Retorna tots els comentaris de la submission amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador de la publicació
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'han retornat tots els comentaris de la publicació.
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # GET submissions by specific user          
  /users/{id}/submissions.json:
    get:
      description: Retorna totes els publicacions de l'usuari amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador de l'usuari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'han retornat les publicacions de l'usuari especificat.
          schema:
            type: array
            items:
              $ref: '#/definitions/Submission'
        404:
          description: L'usuari no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'


# COMMENTS OPERATIONS ----------------------------------------------------------

  # GET all comments and POST new comment
  /comments.json:
    get:
      description: Retorna tots els comentaris.
      responses:
        200:
          description: S'han retornat tots els comentaris.
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'

    post:
      security:
        - apiKey: []
      description: Crea un nou comentari.
      consumes:
        - application/json
      parameters:
        - name: comment
          in: body
          description: El comentari a crear
          required: true
          schema:
            $ref: '#/definitions/CommentCreate'
      responses:
        201:
          description: S'ha creat el comentari especificat.
          schema:
            $ref: '#/definitions/Comment'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  # GET specific comment info
  /comments/{id}.json:
    get:
      description: Retorna la informació d'un comentari.
      parameters:
        - name: id
          in: path
          description: Identificador del comentari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha retornat el comentari.
          schema:
            $ref: '#/definitions/Comment'
        404:
          description: Comentari no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # POST vote some commment          
  /comments/{id}/vote.json:
    post:
      security:
        - apiKey: []
      description: Vota el comentari amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador del comentari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha votat el comentari especificat amb l'usuari autenticat.
        404:
          description: Comentari no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
  
  # GET comments by specific user
  /users/{id}/comments.json:
    get:
      description: Retorna tots els comentaris de l'usuari amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador de l'usuari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'han retornat els comentaris de l'usuari.
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        404:
          description: L'usuari no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            

# REPLIES OPERATIONS -----------------------------------------------------------

  # GET all replies and POST new reply
  /replies.json:
    get:
      description: Retorna totes les respostes.
      responses:
        200:
          description: S'han retornat totes les respostes.
          schema:
            type: array
            items:
              $ref: '#/definitions/Reply'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'

    post:
      security:
        - apiKey: []
      description: Crea una nova resposta.
      consumes:
        - application/json
      parameters:
        - name: reply
          in: body
          description: La resposta a modificar
          required: true
          schema:
            $ref: '#/definitions/ReplyCreate'
      responses:
        201:
          description: S'ha creat la resposta.
          schema:
            $ref: '#/definitions/Reply'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  # GET specific reply info
  /replies/{id}.json:
    get:
      description: Retorna la informació d'una resposta especificada a un comentari.
      parameters:
        - name: id
          in: path
          description: Identificador de la resposta.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha retornat la resposta
          schema:
            $ref: '#/definitions/Reply'
        404:
          description: Resposta no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
  # POST vote some reply          
  /replies/{id}/vote.json:
    post:
      security:
        - apiKey: []
      description: Vota el reply amb id 'id'.
      parameters:
        - name: id
          in: path
          description: Identificador del reply.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha votat el reply especificat amb l'usuari autenticat.
        404:
          description: Reply no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
            
# THREADS OPERATIONS -----------------------------------------------------------            

  # GET user threads list
  /threads/{id}.json:
    get:
      description: Retorna el llistat de 'threads' que té un usuari.
      parameters:
        - name: id
          in: path
          description: Identificador de l'usuari.
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: S'ha retornat el llistat de 'threads' de l'usuari especificat.
          schema:
            type: array
            items:
              $ref: '#/definitions/Thread'
        404:
          description: Usuari no existeix.
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Error inesperat.
          schema:
            $ref: '#/definitions/Error'
      
  
# DESFINITIONS -----------------------------------------------------------------
definitions:
  
  # Submission defition
  Submission:
    type: object
    properties:
      id:
        type: integer
        description: identificador unic de la publicació.
      title:
        type: string
        description: títol de la publicació.
      url:
        type: string
        description: url associada a la publicació.
      text:
        type: string
        description: text associat a la publicació.
      user_id:
        type: integer
        description: identificador de l'usuari creador de la publicació.
      created_at:
        type: string
        description: instant de creació de la publicació.
      updated_at:
        type: string
        description: instant de l'última actualització de la publicació.
  
  SubmissionCreate:
    type: object
    properties:
      title:
        type: string
        description: titol de la submission a crear.
      url:
        type: string
        description: URL on redireccionar.
      text:
        type: string
        description: text de la pregunta.
  
  # Comment defintion
  Comment:
    type: object
    properties:
      id:
        type: integer
        description: identificador unic del comentari.
      content:
        type: string
        description: contingut associat del comentari.
      user_id:
        type: integer
        description: identificador de l'usuari creador del comentari.
      submission_id:
        type: integer
        description: identificador de la publicació relacionada.
      created_at:
        type: string
        description: instant de creació del comentari.
      updated_at:
        type: string
        description: instant de l'última actualització del comentari.
        
  CommentCreate:
    type: object
    properties:
      submission_id:
        type: integer
        description: identificador de la submission de la que es vol fer el comentari.
      content:
        type: string
        description: contingut associat del comentari a crear.

  # Reply definition
  Reply:
    type: object
    properties:
      id:
        type: integer
        description: identificador unic de la resposta.
      content:
        type: string
        description: contingut associat de la resposta.
      user_id:
        type: integer
        description: identificador de l'usuari creador de la resposta.
      comment_id:
        type: integer
        description: identificador del comentari relacionat.
      created_at:
        type: string
        description: instant de creació de la resposta.
      updated_at:
        type: string
        description: instant de l'última actualització de la resposta.
        
  ReplyCreate:     
    type: object
    properties:
      content:
        type: string
        description: contingut de la resposta a crear.
      comment_id:
        type: integer
        description: identificador del comentari al que es correspondrà la resposta.
        
  # Thread definition
  Thread:
    type: object
    properties:
      comments:
        type: array
        description: llistat de comentaris de l'usuari.
        items:
          $ref: "#/definitions/Comment"
      replies:
        type: array
        description: llistat de respostes de l'usuari.
        items:
          $ref: "#/definitions/Reply"

  # User definition
  User:
    type: object
    properties:
      id:
        type: integer
        description: identificador unic de l'usuari.
      name:
        type: string
        description: nom de l'usuari.
      about:
        type: string
        description: descripció de l'usuari.
      created_at:
        type: string
        description: instant de creació de l'usuari.
      updated_at:
        type: string
        description: instant de l'última actualització de l'usuari.
  
  UserUpdate:
    type: object
    properties:
      about:
        type: string
        description: nova descripció a actualitzar.
  
  # Error defintion
  Error:
    type: object
    properties:
        code:
          type: integer
          description: codi de l'error.
          format: int32
        message:
          type: string
          description: missatge de l'error.
        fields:
          type: string
          description: camps de l'error.